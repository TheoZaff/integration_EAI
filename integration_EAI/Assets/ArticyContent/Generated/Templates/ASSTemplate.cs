// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections;
using UnityEngine;
using System.Collections.Generic;
using Articy.Unity.Interfaces;
using Articy.Unity;
using Articy.Eai.Features;
using Articy.Eai;

namespace Articy.Eai.Templates
{
    
    
    [Serializable()]
    public class ASSTemplate : IArticyBaseObject, IPropertyProvider
    {
        
        [SerializeField()]
        private ArticyValueplayerFeature mplayer = new ArticyValueplayerFeature();
        
        public Articy.Eai.Features.playerFeature player
        {
            get
            {
                return mplayer.GetValue();
            }
            set
            {
                mplayer.SetValue(value);
            }
        }
        
        private void CloneProperties(object aClone)
        {
            Articy.Eai.Templates.ASSTemplate newClone = ((Articy.Eai.Templates.ASSTemplate)(aClone));
            if ((player != null))
            {
                newClone.player = ((Articy.Eai.Features.playerFeature)(player.CloneObject()));
            }
        }
        
        public object CloneObject()
        {
            Articy.Eai.Templates.ASSTemplate clone = new Articy.Eai.Templates.ASSTemplate();
            CloneProperties(clone);
            return clone;
        }
        
        public virtual bool IsLocalizedPropertyOverwritten(string aProperty)
        {
            return false;
        }
        
        #region property provider interface
        public void setProp(string aProperty, object aValue)
        {
            int featureIndex = aProperty.IndexOf('.');
            if ((featureIndex != -1))
            {
                string featurePath = aProperty.Substring(0, featureIndex);
                string featureProperty = aProperty.Substring((featureIndex + 1));
                if ((featurePath == "player"))
                {
                    player.setProp(featureProperty, aValue);
                }
            }
        }
        
        public Articy.Unity.Interfaces.ScriptDataProxy getProp(string aProperty)
        {
            int featureIndex = aProperty.IndexOf('.');
            if ((featureIndex != -1))
            {
                string featurePath = aProperty.Substring(0, featureIndex);
                string featureProperty = aProperty.Substring((featureIndex + 1));
                if ((featurePath == "player"))
                {
                    return player.getProp(featureProperty);
                }
            }
            return null;
        }
        #endregion
    }
}
